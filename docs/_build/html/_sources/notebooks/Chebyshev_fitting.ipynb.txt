{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c78de8d9-4870-4d03-8a1a-8b5f8099d53b",
   "metadata": {},
   "source": [
    "# Fit data-set using Chebyshev Kernel"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "3386cdb1-56f2-4b45-9a00-898bd1031d28",
   "metadata": {},
   "outputs": [],
   "source": [
    "import orsvm\n",
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "16ff5384-a3d4-42d0-bcaf-5bc077a98034",
   "metadata": {},
   "source": [
    "## Load data-set "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "e1eb5312-c7de-46eb-a329-c445d04a6637",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Fitting a model requires the data-set to be prepared, in order to be a binary classification.\n",
    "df = pd.read_csv(r'D:\\Dev\\Orthogonal_Polynomials\\Datasets\\monks\\1_monks.train',\n",
    "                names=['label','col1','col2','col3',\n",
    "                        'col4','col5','col6'],index_col=False)\n",
    "\n",
    "df.loc[df.label==0, ['label']] = -1    # map \"0\" to \"-1\"\n",
    "y_train=df['label'].to_numpy()         # convert y_train to numpy array\n",
    "df.drop('label', axis=1, inplace=True) # drop the class label\n",
    "X_train=df.to_numpy()                  # convert x_train to numpy array\n",
    "\n",
    "\n",
    "# load test-set\n",
    "df = pd.read_csv(r'D:\\Dev\\Orthogonal_Polynomials\\Datasets\\monks\\1_monks.test',\n",
    "                    names=['label','col1','col2','col3',\n",
    "                            'col4','col5','col6'],index_col=False)\n",
    "df.loc[df.label==0, ['label']] = -1\n",
    "y_test=df['label'].to_numpy()\n",
    "df.drop('label', axis=1, inplace=True)\n",
    "X_test=df.to_numpy()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "928dc656-1bad-4cbf-a93a-79976b9eaf75",
   "metadata": {},
   "source": [
    "## Initiate kernel"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "7b73c7b4-e77c-4f1e-8d35-c51bd69c4c5f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create an object from Model class of ORSVM\n",
    "obj=orsvm.Model(kernel=\"Chebyshev\",order=3,T=0.5,form='r')  "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d44e6802-3dcf-4805-bd1b-fd85e2707828",
   "metadata": {},
   "source": [
    "## Fit data-set and Capture paramaters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "28c28428-a0c7-4617-b099-1ffd2e428946",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "********** 20/09/2021 15:01:30 **********\n",
      "** OSVM kernel: Chebyshev\n",
      "** Order: 3\n",
      "** Fractional mode, transition : 0.5\n",
      "** Avegage support vector determiner selected!\n",
      "** sv threshold: 10^ -4\n"
     ]
    }
   ],
   "source": [
    "# fit the model and Capture parameters\n",
    "Weights, SupportVectors, Bias, KernelInstance = obj.ModelFit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1648c520-6742-41f4-a153-bbcf1ebb48ba",
   "metadata": {},
   "source": [
    "## Inspect model's accuracy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "7b7cca74-4a76-45dd-ba1d-e2fdd7c8f74e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "** Accuracy score: 0.9120370370370371\n",
      "** Classification Report:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "          -1       0.89      0.94      0.91       216\n",
      "           1       0.93      0.89      0.91       216\n",
      "\n",
      "    accuracy                           0.91       432\n",
      "   macro avg       0.91      0.91      0.91       432\n",
      "weighted avg       0.91      0.91      0.91       432\n",
      "\n",
      "** Confusion Matrix:\n",
      " [[202  14]\n",
      " [ 24 192]]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "0.9120370370370371"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Model Prediction function\n",
    "obj.ModelPredict(X_test,y_test,Bias,KernelInstance)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
